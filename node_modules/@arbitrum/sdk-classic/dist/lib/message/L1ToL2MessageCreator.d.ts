import { Signer } from '@ethersproject/abstract-signer';
import { Provider } from '@ethersproject/abstract-provider';
import { L1toL2MessageGasValues } from './L1ToL2MessageGasEstimator';
import { L1TransactionReceipt } from './L1Transaction';
import { ContractReceipt, PayableOverrides } from '@ethersproject/contracts';
import { BigNumber } from 'ethers';
interface CreateRetryableTicketOpptions {
    excessFeeRefundAddress?: string;
    callValueRefundAddress?: string;
}
export declare class L1ToL2MessageCreator {
    readonly l1Signer: Signer;
    sender?: string;
    constructor(l1Signer: Signer);
    createRetryableTicketFromGasParams(gasParams: L1toL2MessageGasValues, destAddr: string, callDataHex: string, l2ChainID: number, options?: CreateRetryableTicketOpptions, overrides?: PayableOverrides): Promise<ContractReceipt>;
    createRetryableTicket(destAddr: string, callDataHex: string, l2CallValue: BigNumber, l2Provider: Provider, options?: CreateRetryableTicketOpptions): Promise<L1TransactionReceipt>;
    getSender(): Promise<string>;
}
export {};
