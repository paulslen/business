"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChallengeManager__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint64',
                name: 'challengeIndex',
                type: 'uint64',
            },
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'challengeRoot',
                type: 'bytes32',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'challengedSegmentStart',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'challengedSegmentLength',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'bytes32[]',
                name: 'chainHashes',
                type: 'bytes32[]',
            },
        ],
        name: 'Bisected',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint64',
                name: 'challengeIndex',
                type: 'uint64',
            },
            {
                indexed: false,
                internalType: 'enum IChallengeManager.ChallengeTerminationType',
                name: 'kind',
                type: 'uint8',
            },
        ],
        name: 'ChallengeEnded',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint64',
                name: 'challengeIndex',
                type: 'uint64',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'blockSteps',
                type: 'uint256',
            },
        ],
        name: 'ExecutionChallengeBegun',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint64',
                name: 'challengeIndex',
                type: 'uint64',
            },
            {
                components: [
                    {
                        internalType: 'bytes32[2]',
                        name: 'bytes32Vals',
                        type: 'bytes32[2]',
                    },
                    {
                        internalType: 'uint64[2]',
                        name: 'u64Vals',
                        type: 'uint64[2]',
                    },
                ],
                indexed: false,
                internalType: 'struct GlobalState',
                name: 'startState',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'bytes32[2]',
                        name: 'bytes32Vals',
                        type: 'bytes32[2]',
                    },
                    {
                        internalType: 'uint64[2]',
                        name: 'u64Vals',
                        type: 'uint64[2]',
                    },
                ],
                indexed: false,
                internalType: 'struct GlobalState',
                name: 'endState',
                type: 'tuple',
            },
        ],
        name: 'InitiatedChallenge',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint64',
                name: 'challengeIndex',
                type: 'uint64',
            },
        ],
        name: 'OneStepProofCompleted',
        type: 'event',
    },
    {
        inputs: [
            {
                internalType: 'uint64',
                name: 'challengeIndex',
                type: 'uint64',
            },
            {
                components: [
                    {
                        internalType: 'uint256',
                        name: 'oldSegmentsStart',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'oldSegmentsLength',
                        type: 'uint256',
                    },
                    {
                        internalType: 'bytes32[]',
                        name: 'oldSegments',
                        type: 'bytes32[]',
                    },
                    {
                        internalType: 'uint256',
                        name: 'challengePosition',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct ChallengeLib.SegmentSelection',
                name: 'selection',
                type: 'tuple',
            },
            {
                internalType: 'bytes32[]',
                name: 'newSegments',
                type: 'bytes32[]',
            },
        ],
        name: 'bisectExecution',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint64',
                name: 'challengeIndex',
                type: 'uint64',
            },
            {
                components: [
                    {
                        internalType: 'uint256',
                        name: 'oldSegmentsStart',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'oldSegmentsLength',
                        type: 'uint256',
                    },
                    {
                        internalType: 'bytes32[]',
                        name: 'oldSegments',
                        type: 'bytes32[]',
                    },
                    {
                        internalType: 'uint256',
                        name: 'challengePosition',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct ChallengeLib.SegmentSelection',
                name: 'selection',
                type: 'tuple',
            },
            {
                internalType: 'enum MachineStatus[2]',
                name: 'machineStatuses',
                type: 'uint8[2]',
            },
            {
                internalType: 'bytes32[2]',
                name: 'globalStateHashes',
                type: 'bytes32[2]',
            },
            {
                internalType: 'uint256',
                name: 'numSteps',
                type: 'uint256',
            },
        ],
        name: 'challengeExecution',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint64',
                name: 'challengeIndex',
                type: 'uint64',
            },
        ],
        name: 'challengeInfo',
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'addr',
                                type: 'address',
                            },
                            {
                                internalType: 'uint256',
                                name: 'timeLeft',
                                type: 'uint256',
                            },
                        ],
                        internalType: 'struct ChallengeLib.Participant',
                        name: 'current',
                        type: 'tuple',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'addr',
                                type: 'address',
                            },
                            {
                                internalType: 'uint256',
                                name: 'timeLeft',
                                type: 'uint256',
                            },
                        ],
                        internalType: 'struct ChallengeLib.Participant',
                        name: 'next',
                        type: 'tuple',
                    },
                    {
                        internalType: 'uint256',
                        name: 'lastMoveTimestamp',
                        type: 'uint256',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'wasmModuleRoot',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'challengeStateHash',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'maxInboxMessages',
                        type: 'uint64',
                    },
                    {
                        internalType: 'enum ChallengeLib.ChallengeMode',
                        name: 'mode',
                        type: 'uint8',
                    },
                ],
                internalType: 'struct ChallengeLib.Challenge',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        name: 'challenges',
        outputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'addr',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'timeLeft',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct ChallengeLib.Participant',
                name: 'current',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'addr',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'timeLeft',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct ChallengeLib.Participant',
                name: 'next',
                type: 'tuple',
            },
            {
                internalType: 'uint256',
                name: 'lastMoveTimestamp',
                type: 'uint256',
            },
            {
                internalType: 'bytes32',
                name: 'wasmModuleRoot',
                type: 'bytes32',
            },
            {
                internalType: 'bytes32',
                name: 'challengeStateHash',
                type: 'bytes32',
            },
            {
                internalType: 'uint64',
                name: 'maxInboxMessages',
                type: 'uint64',
            },
            {
                internalType: 'enum ChallengeLib.ChallengeMode',
                name: 'mode',
                type: 'uint8',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint64',
                name: 'challengeIndex',
                type: 'uint64',
            },
        ],
        name: 'clearChallenge',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'wasmModuleRoot_',
                type: 'bytes32',
            },
            {
                internalType: 'enum MachineStatus[2]',
                name: 'startAndEndMachineStatuses_',
                type: 'uint8[2]',
            },
            {
                components: [
                    {
                        internalType: 'bytes32[2]',
                        name: 'bytes32Vals',
                        type: 'bytes32[2]',
                    },
                    {
                        internalType: 'uint64[2]',
                        name: 'u64Vals',
                        type: 'uint64[2]',
                    },
                ],
                internalType: 'struct GlobalState[2]',
                name: 'startAndEndGlobalStates_',
                type: 'tuple[2]',
            },
            {
                internalType: 'uint64',
                name: 'numBlocks',
                type: 'uint64',
            },
            {
                internalType: 'address',
                name: 'asserter_',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'challenger_',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'asserterTimeLeft_',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'challengerTimeLeft_',
                type: 'uint256',
            },
        ],
        name: 'createChallenge',
        outputs: [
            {
                internalType: 'uint64',
                name: '',
                type: 'uint64',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint64',
                name: 'challengeIndex',
                type: 'uint64',
            },
        ],
        name: 'currentResponder',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint64',
                name: 'challengeIndex',
                type: 'uint64',
            },
        ],
        name: 'currentResponderTimeLeft',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'delayedBridge',
        outputs: [
            {
                internalType: 'contract IBridge',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract IChallengeResultReceiver',
                name: 'resultReceiver_',
                type: 'address',
            },
            {
                internalType: 'contract ISequencerInbox',
                name: 'sequencerInbox_',
                type: 'address',
            },
            {
                internalType: 'contract IBridge',
                name: 'delayedBridge_',
                type: 'address',
            },
            {
                internalType: 'contract IOneStepProofEntry',
                name: 'osp_',
                type: 'address',
            },
        ],
        name: 'initialize',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint64',
                name: 'challengeIndex',
                type: 'uint64',
            },
        ],
        name: 'isTimedOut',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint64',
                name: 'challengeIndex',
                type: 'uint64',
            },
            {
                components: [
                    {
                        internalType: 'uint256',
                        name: 'oldSegmentsStart',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'oldSegmentsLength',
                        type: 'uint256',
                    },
                    {
                        internalType: 'bytes32[]',
                        name: 'oldSegments',
                        type: 'bytes32[]',
                    },
                    {
                        internalType: 'uint256',
                        name: 'challengePosition',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct ChallengeLib.SegmentSelection',
                name: 'selection',
                type: 'tuple',
            },
            {
                internalType: 'bytes',
                name: 'proof',
                type: 'bytes',
            },
        ],
        name: 'oneStepProveExecution',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'osp',
        outputs: [
            {
                internalType: 'contract IOneStepProofEntry',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'resultReceiver',
        outputs: [
            {
                internalType: 'contract IChallengeResultReceiver',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'sequencerInbox',
        outputs: [
            {
                internalType: 'contract ISequencerInbox',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint64',
                name: 'challengeIndex',
                type: 'uint64',
            },
        ],
        name: 'timeout',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'totalChallengesCreated',
        outputs: [
            {
                internalType: 'uint64',
                name: '',
                type: 'uint64',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
];
const _bytecode = '0x60a06040523060805234801561001457600080fd5b5060805161316e6100306000396000611275015261316e6000f3fe608060405234801561001057600080fd5b50600436106100eb5760003560e01c80639ede42b9116100925780639ede42b91461025c578063a521b0321461027f578063c8fdb65b14610292578063d248d124146102cd578063ee35f327146102e0578063f26a62c6146102f3578063f51de41b14610306578063f8c8765e14610319578063fb7be0a11461032c57600080fd5b806314eab5e7146100f05780631b45c86a1461012057806323a9ef23146101355780633504f1d71461016057806356e9df97146101735780635ef489e6146101865780637fd07a9c146101995780638f1d3776146101b9575b600080fd5b6101036100fe366004612730565b61033f565b6040516001600160401b0390911681526020015b60405180910390f35b61013361012e3660046127c3565b610647565b005b6101486101433660046127c3565b610717565b6040516001600160a01b039091168152602001610117565b600254610148906001600160a01b031681565b6101336101813660046127c3565b61073b565b600054610103906001600160401b031681565b6101ac6101a73660046127c3565b6108a9565b6040516101179190612820565b6102496101c7366004612892565b6001602081815260009283526040928390208351808501855281546001600160a01b0390811682529382015481840152845180860190955260028201549093168452600381015491840191909152600481015460058201546006830154600790930154939493919290916001600160401b03811690600160401b900460ff1687565b60405161011797969594939291906128ab565b61026f61026a3660046127c3565b610982565b6040519015158152602001610117565b61013361028d366004612908565b6109a9565b6102bf6102a03660046127c3565b6001600160401b03166000908152600160208190526040909120015490565b604051908152602001610117565b6101336102db3660046129ac565b610e1f565b600354610148906001600160a01b031681565b600554610148906001600160a01b031681565b600454610148906001600160a01b031681565b610133610327366004612a3e565b61126a565b61013361033a366004612a9a565b6113db565b6002546000906001600160a01b031633146103945760405162461bcd60e51b815260206004820152601060248201526f13d3931657d493d313155417d0d2105360821b60448201526064015b60405180910390fd5b6040805160028082526060820183526000926020830190803683370190505090506103ea6103c560208b018b612b3e565b6103e58a60005b608002018036038101906103e09190612bfd565b611a4b565b611acc565b816000815181106103fd576103fd612b28565b602090810291909101015261042c8960016020020160208101906104219190612b3e565b6103e58a60016103cc565b8160018151811061043f5761043f612b28565b60209081029190910101526000805481908190610464906001600160401b0316612cab565b91906101000a8154816001600160401b0302191690836001600160401b031602179055905060006001600160401b0316816001600160401b031614156104ac576104ac612cd2565b6001600160401b0381166000908152600160205260408120600581018d9055906104e66104e1368d90038d0160808e01612bfd565b611bf0565b905060026104fa60408e0160208f01612b3e565b600381111561050b5761050b6127f6565b14806105395750600061052e610529368e90038e0160808f01612bfd565b611c05565b6001600160401b0316115b1561054c578061054881612cab565b9150505b6007820180546040805180820182526001600160a01b038d811680835260209283018d90526002880180546001600160a01b03199081169092179055600388018d905583518085018552918e16808352919092018b90528654909116178555600185018990554260048601556001600160401b0384811668ffffffffffffffffff1990931692909217600160401b179092559051908416907f76604fe17af46c9b5f53ffe99ff23e0f655dab91886b07ac1fc0254319f7145a90610616908e906080820190612d32565b60405180910390a26106348360008c6001600160401b031687611c14565b5090925050505b98975050505050505050565b60006001600160401b038216600090815260016020526040902060070154600160401b900460ff166002811115610680576106806127f6565b1415604051806040016040528060078152602001661393d7d0d2105360ca1b815250906106c05760405162461bcd60e51b815260040161038b9190612d4e565b506106ca81610982565b6107095760405162461bcd60e51b815260206004820152601060248201526f54494d454f55545f444541444c494e4560801b604482015260640161038b565b610714816000611caa565b50565b6001600160401b03166000908152600160205260409020546001600160a01b031690565b6002546001600160a01b031633146107885760405162461bcd60e51b815260206004820152601060248201526f2727aa2fa922a9afa922a1a2a4ab22a960811b604482015260640161038b565b60006001600160401b038216600090815260016020526040902060070154600160401b900460ff1660028111156107c1576107c16127f6565b1415604051806040016040528060078152602001661393d7d0d2105360ca1b815250906108015760405162461bcd60e51b815260040161038b9190612d4e565b506001600160401b038116600081815260016020819052604080832080546001600160a01b031990811682559281018490556002810180549093169092556003808301849055600483018490556005830184905560068301939093556007909101805468ffffffffffffffffff19169055517ffdaece6c274a4b56af16761f83fd6b1062823192630ea08e019fdf9b2d747f409161089e91612da3565b60405180910390a250565b6108b161268b565b6001600160401b0382811660009081526001602081815260409283902083516101208101855281546001600160a01b0390811660e0830190815294830154610100830152938152845180860186526002808401549095168152600383015481850152928101929092526004810154938201939093526005830154606082015260068301546080820152600783015493841660a08201529260c0840191600160401b90910460ff1690811115610968576109686127f6565b6002811115610979576109796127f6565b90525092915050565b6001600160401b03811660009081526001602052604081206109a390611dd8565b92915050565b6001600160401b0384166000908152600160205260408120859185916109ce84610717565b6001600160a01b0316336001600160a01b0316146109fe5760405162461bcd60e51b815260040161038b90612dbd565b610a0784610982565b15610a245760405162461bcd60e51b815260040161038b90612de2565b6000826002811115610a3857610a386127f6565b1415610aa65760006007820154600160401b900460ff166002811115610a6057610a606127f6565b1415604051806040016040528060078152602001661393d7d0d2105360ca1b81525090610aa05760405162461bcd60e51b815260040161038b9190612d4e565b50610b65565b6001826002811115610aba57610aba6127f6565b1415610b045760016007820154600160401b900460ff166002811115610ae257610ae26127f6565b14610aff5760405162461bcd60e51b815260040161038b90612e09565b610b65565b6002826002811115610b1857610b186127f6565b1415610b5d5760026007820154600160401b900460ff166002811115610b4057610b406127f6565b14610aff5760405162461bcd60e51b815260040161038b90612e31565b610b65612cd2565b610bb383356020850135610b7c6040870187612e5d565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611df092505050565b816006015414610bd55760405162461bcd60e51b815260040161038b90612ead565b6002610be46040850185612e5d565b90501080610c0f57506001610bfc6040850185612e5d565b610c07929150612ed0565b836060013510155b15610c2c5760405162461bcd60e51b815260040161038b90612ee7565b600080610c3889611e27565b9150915060018111610c785760405162461bcd60e51b81526020600482015260096024820152681513d3d7d4d213d49560ba1b604482015260640161038b565b806028811115610c86575060285b610c91816001612f12565b8814610cce5760405162461bcd60e51b815260206004820152600c60248201526b57524f4e475f44454752454560a01b604482015260640161038b565b50610d188989896000818110610ce657610ce6612b28565b602002919091013590508a8a610cfd600182612ed0565b818110610d0c57610d0c612b28565b90506020020135611eb8565b610d578a83838b8b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611c1492505050565b50600090505b6007820154600160401b900460ff166002811115610d7d57610d7d6127f6565b1415610d895750610e16565b6040805180820190915281546001600160a01b03168152600182015460208201526004820154610db99042612ed0565b81602001818151610dca9190612ed0565b90525060028201805483546001600160a01b038083166001600160a01b031992831617865560038601805460018801558551929093169116179091556020909101519055426004909101555b50505050505050565b6001600160401b038416600090815260016020526040902084908490600290610e4784610717565b6001600160a01b0316336001600160a01b031614610e775760405162461bcd60e51b815260040161038b90612dbd565b610e8084610982565b15610e9d5760405162461bcd60e51b815260040161038b90612de2565b6000826002811115610eb157610eb16127f6565b1415610f1f5760006007820154600160401b900460ff166002811115610ed957610ed96127f6565b1415604051806040016040528060078152602001661393d7d0d2105360ca1b81525090610f195760405162461bcd60e51b815260040161038b9190612d4e565b50610fde565b6001826002811115610f3357610f336127f6565b1415610f7d5760016007820154600160401b900460ff166002811115610f5b57610f5b6127f6565b14610f785760405162461bcd60e51b815260040161038b90612e09565b610fde565b6002826002811115610f9157610f916127f6565b1415610fd65760026007820154600160401b900460ff166002811115610fb957610fb96127f6565b14610f785760405162461bcd60e51b815260040161038b90612e31565b610fde612cd2565b610ff583356020850135610b7c6040870187612e5d565b8160060154146110175760405162461bcd60e51b815260040161038b90612ead565b60026110266040850185612e5d565b905010806110515750600161103e6040850185612e5d565b611049929150612ed0565b836060013510155b1561106e5760405162461bcd60e51b815260040161038b90612ee7565b6001600160401b038816600090815260016020526040812090806110918a611e27565b9092509050600181146110b65760405162461bcd60e51b815260040161038b90612f2a565b506005546040805160608101825260078501546001600160401b031681526003546001600160a01b0390811660208301526004548116828401526000931691632fae88119190859061110a908f018f612e5d565b8f6060013581811061111e5761111e612b28565b905060200201358d8d6040518663ffffffff1660e01b8152600401611147959493929190612f4c565b60206040518083038186803b15801561115f57600080fd5b505afa158015611173573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111979190612fb6565b90506111a660408b018b612e5d565b6111b560608d01356001612f12565b8181106111c4576111c4612b28565b905060200201358114156112095760405162461bcd60e51b815260206004820152600c60248201526b14d0535157d3d4d417d1539160a21b604482015260640161038b565b6040516001600160401b038c16907fc2cc42e04ff8c36de71c6a2937ea9f161dd0dd9e175f00caa26e5200643c781e90600090a261125e8b6001600160401b0316600090815260016020526040812060060155565b5060009150610d5d9050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156112f85760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b606482015260840161038b565b6002546001600160a01b0316156113405760405162461bcd60e51b815260206004820152600c60248201526b1053149150511657d253925560a21b604482015260640161038b565b6001600160a01b03841661138b5760405162461bcd60e51b81526020600482015260126024820152712727afa922a9aaa62a2fa922a1a2a4ab22a960711b604482015260640161038b565b600280546001600160a01b039586166001600160a01b0319918216179091556003805494861694821694909417909355600480549285169284169290921790915560058054919093169116179055565b6001600160401b03851660009081526001602081905260409091208691869161140384610717565b6001600160a01b0316336001600160a01b0316146114335760405162461bcd60e51b815260040161038b90612dbd565b61143c84610982565b156114595760405162461bcd60e51b815260040161038b90612de2565b600082600281111561146d5761146d6127f6565b14156114db5760006007820154600160401b900460ff166002811115611495576114956127f6565b1415604051806040016040528060078152602001661393d7d0d2105360ca1b815250906114d55760405162461bcd60e51b815260040161038b9190612d4e565b5061159a565b60018260028111156114ef576114ef6127f6565b14156115395760016007820154600160401b900460ff166002811115611517576115176127f6565b146115345760405162461bcd60e51b815260040161038b90612e09565b61159a565b600282600281111561154d5761154d6127f6565b14156115925760026007820154600160401b900460ff166002811115611575576115756127f6565b146115345760405162461bcd60e51b815260040161038b90612e31565b61159a612cd2565b6115b183356020850135610b7c6040870187612e5d565b8160060154146115d35760405162461bcd60e51b815260040161038b90612ead565b60026115e26040850185612e5d565b9050108061160d575060016115fa6040850185612e5d565b611605929150612ed0565b836060013510155b1561162a5760405162461bcd60e51b815260040161038b90612ee7565b60018510156116715760405162461bcd60e51b815260206004820152601360248201527210d2105313115391d157d513d3d7d4d213d495606a1b604482015260640161038b565b650800000000008511156116bc5760405162461bcd60e51b81526020600482015260126024820152714348414c4c454e47455f544f4f5f4c4f4e4760701b604482015260640161038b565b6116fe886116de6116d060208b018b612b3e565b8960005b6020020135611acc565b6116f96116f160408c0160208d01612b3e565b8a60016116d4565b611eb8565b6001600160401b038916600090815260016020526040812090806117218b611e27565b91509150806001146117455760405162461bcd60e51b815260040161038b90612f2a565b600161175460208c018c612b3e565b6003811115611765576117656127f6565b1461181f5761177a60408b0160208c01612b3e565b600381111561178b5761178b6127f6565b61179860208c018c612b3e565b60038111156117a9576117a96127f6565b1480156117ba5750883560208a0135145b6117f65760405162461bcd60e51b815260206004820152600d60248201526c48414c5445445f4348414e474560981b604482015260640161038b565b6118178c6001600160401b0316600090815260016020526040812060060155565b505050611986565b600261183160408c0160208d01612b3e565b6003811115611842576118426127f6565b141561188b57883560208a01351461188b5760405162461bcd60e51b815260206004820152600c60248201526b4552524f525f4348414e474560a01b604482015260640161038b565b60408051600280825260608201835260009260208301908036833750505060058501549091506118bd908b3590611f8d565b816000815181106118d0576118d0612b28565b60209081029190910101526118fe8b60016020020160208101906118f49190612b3e565b60208c013561213d565b8160018151811061191157611911612b28565b602090810291909101015260078401805460ff60401b1916600160411b17905561193e8d60008b84611c14565b8c6001600160401b03167f24e032e170243bbea97e140174b22dc7e54fb85925afbf52c70e001cd6af16db8460405161197991815260200190565b60405180910390a2505050505b60006007820154600160401b900460ff1660028111156119a8576119a86127f6565b14156119b45750611a41565b6040805180820190915281546001600160a01b031681526001820154602082015260048201546119e49042612ed0565b816020018181516119f59190612ed0565b90525060028201805483546001600160a01b038083166001600160a01b031992831617865560038601805460018801558551929093169116179091556020909101519055426004909101555b5050505050505050565b80518051602091820151828401518051908401516040516c23b637b130b61039ba30ba329d60991b95810195909552602d850193909352604d8401919091526001600160c01b031960c091821b8116606d85015291901b166075820152600090607d015b604051602081830303815290604052805190602001209050919050565b60006001836003811115611ae257611ae26127f6565b1415611b28576040516b213637b1b59039ba30ba329d60a11b6020820152602c8101839052604c015b6040516020818303038152906040528051906020012090506109a3565b6002836003811115611b3c57611b3c6127f6565b1415611b725760405174213637b1b59039ba30ba32961032b93937b932b21d60591b602082015260358101839052605501611b0b565b6003836003811115611b8657611b866127f6565b1415611bb55760405174213637b1b59039ba30ba3296103a37b7903330b91d60591b6020820152603501611b0b565b60405162461bcd60e51b815260206004820152601060248201526f4241445f424c4f434b5f53544154555360801b604482015260640161038b565b6020810151600090815b602002015192915050565b60208101516000906001611bfa565b6001821015611c2557611c25612cd2565b600281511015611c3757611c37612cd2565b6000611c44848484611df0565b6001600160401b038616600081815260016020526040908190206006018390555191925082917f86b34e9455464834eca718f62d4481437603bb929d8a78ccde5d1bc79fa06d6890611c9b90889088908890612fcf565b60405180910390a35050505050565b6001600160401b03821660008181526001602081905260408083206002808201805483546001600160a01b0319808216865596850188905595811690915560038301869055600480840187905560058401879055600684019690965560078301805468ffffffffffffffffff1916905590549251630357aa4960e01b8152948501959095526001600160a01b03948516602485018190529285166044850181905290949293909290911690630357aa4990606401600060405180830381600087803b158015611d7857600080fd5b505af1158015611d8c573d6000803e3d6000fd5b50505050846001600160401b03167ffdaece6c274a4b56af16761f83fd6b1062823192630ea08e019fdf9b2d747f4085604051611dc99190612da3565b60405180910390a25050505050565b6001810154600090611de9836121e6565b1192915050565b6000838383604051602001611e0793929190613024565b6040516020818303038152906040528051906020012090505b9392505050565b600080806001611e3a6040860186612e5d565b611e45929150612ed0565b9050611e5581602086013561307c565b9150611e65606085013583613090565b611e70908535612f12565b92506002611e816040860186612e5d565b611e8c929150612ed0565b84606001351415611eb257611ea58160208601356130af565b611eaf9083612f12565b91505b50915091565b81611ec66040850185612e5d565b8560600135818110611eda57611eda612b28565b9050602002013514611f1c5760405162461bcd60e51b815260206004820152600b60248201526a15d493d391d7d4d510549560aa1b604482015260640161038b565b80611f2a6040850185612e5d565b611f3960608701356001612f12565b818110611f4857611f48612b28565b905060200201351415611f885760405162461bcd60e51b815260206004820152600860248201526714d0535157d1539160c21b604482015260640161038b565b505050565b60408051600380825260808201909252600091829190816020015b6040805180820190915260008082526020820152815260200190600190039081611fa857505060408051808201825260008082526020918201819052825180840190935260048352908201529091508160008151811061200a5761200a612b28565b602002602001018190525061201f60006121f8565b8160018151811061203257612032612b28565b602002602001018190525061204760006121f8565b8160028151811061205a5761205a612b28565b60209081029190910181019190915260408051808301825283815281518083019092528082526000928201929092526120aa60408051606080820183529181019182529081526000602082015290565b6040805160608082018352918101918252908152600060208201526040805180820182526060808252600060208084018290528451610140810186528281529081018890529384018690529083018490526080830182905260a083018b905260c0830181905260e0830181905261010083015261012082018990529061212f8161222b565b9a9950505050505050505050565b60006001836003811115612153576121536127f6565b141561216a5781604051602001611b0b91906130c3565b600283600381111561217e5761217e6127f6565b14156121a8576040516f26b0b1b434b7329032b93937b932b21d60811b6020820152603001611b0b565b60038360038111156121bc576121bc6127f6565b1415611bb5576040516f26b0b1b434b732903a37b7903330b91d60811b6020820152603001611b0b565b60008160040154426109a39190612ed0565b604080518082019091526000808252602082015250604080518082019091526000815263ffffffff909116602082015290565b60008082516003811115612241576122416127f6565b141561230f5761225482602001516123fc565b61226183604001516123fc565b61226e8460600151612481565b61227b8560800151612515565b60a086015160c087015160e0808901516101008a01516101208b01516040516f26b0b1b434b73290393ab73734b7339d60811b6020820152603081019a909a5260508a01989098526070890196909652609088019490945260b08701929092526001600160e01b031990821b811660d087015291811b821660d48601529190911b1660d883015260dc82015260fc01611aaf565b600182516003811115612324576123246127f6565b141561233f578160a00151604051602001611aaf91906130c3565b600282516003811115612354576123546127f6565b141561237e576040516f26b0b1b434b7329032b93937b932b21d60811b6020820152603001611aaf565b600382516003811115612393576123936127f6565b14156123bd576040516f26b0b1b434b732903a37b7903330b91d60811b6020820152603001611aaf565b60405162461bcd60e51b815260206004820152600f60248201526e4241445f4d4143485f53544154555360881b604482015260640161038b565b919050565b60208101518151515160005b8181101561247a5783516124259061242090836125ae565b6125e6565b6040516b2b30b63ab29039ba30b1b59d60a11b6020820152602c810191909152604c8101849052606c016040516020818303038152906040528051906020012092508080612472906130e8565b915050612408565b5050919050565b60208101518151515160005b8181101561247a5783516124a19082612603565b836040516020016124ea92919075283937b3b930b69031b7bab73a32b91039ba30b1b59d60511b815260e09290921b6001600160e01b0319166016830152601a820152603a0190565b604051602081830303815290604052805190602001209250808061250d906130e8565b91505061248d565b602081015160005b8251518110156125a85761254d8360000151828151811061254057612540612b28565b602002602001015161261b565b6040517129ba30b1b590333930b6b29039ba30b1b59d60711b602082015260328101919091526052810183905260720160405160208183030381529060405280519060200120915080806125a0906130e8565b91505061251d565b50919050565b604080518082019091526000808252602082015282518051839081106125d6576125d6612b28565b6020026020010151905092915050565b600081600001518260200151604051602001611aaf929190613103565b6000826000015182815181106125d6576125d6612b28565b600061262a82600001516125e6565b602080840151604080860151606087015191516b29ba30b1b590333930b6b29d60a11b94810194909452602c840194909452604c8301919091526001600160e01b031960e093841b8116606c840152921b9091166070820152607401611aaf565b604080516101208101909152600060e08201818152610100830191909152819081526020016126ca604080518082019091526000808252602082015290565b815260006020820181905260408201819052606082018190526080820181905260a09091015290565b80604081018310156109a357600080fd5b80356001600160401b03811681146123f757600080fd5b6001600160a01b038116811461071457600080fd5b600080600080600080600080610200898b03121561274d57600080fd5b8835975061275e8a60208b016126f3565b965061016089018a81111561277257600080fd5b60608a01965061278181612704565b9550506101808901356127938161271b565b93506101a08901356127a48161271b565b979a96995094979396929592945050506101c0820135916101e0013590565b6000602082840312156127d557600080fd5b611e2082612704565b80516001600160a01b03168252602090810151910152565b634e487b7160e01b600052602160045260246000fd5b6003811061281c5761281c6127f6565b9052565b6000610120820190506128348284516127de565b602083015161284660408401826127de565b5060408301516080830152606083015160a0830152608083015160c08301526001600160401b0360a08401511660e083015260c083015161288b61010084018261280c565b5092915050565b6000602082840312156128a457600080fd5b5035919050565b61012081016128ba828a6127de565b6128c760408301896127de565b8660808301528560a08301528460c08301526001600160401b03841660e083015261063b61010083018461280c565b6000608082840312156125a857600080fd5b6000806000806060858703121561291e57600080fd5b61292785612704565b935060208501356001600160401b038082111561294357600080fd5b61294f888389016128f6565b9450604087013591508082111561296557600080fd5b818701915087601f83011261297957600080fd5b81358181111561298857600080fd5b8860208260051b850101111561299d57600080fd5b95989497505060200194505050565b600080600080606085870312156129c257600080fd5b6129cb85612704565b935060208501356001600160401b03808211156129e757600080fd5b6129f3888389016128f6565b94506040870135915080821115612a0957600080fd5b818701915087601f830112612a1d57600080fd5b813581811115612a2c57600080fd5b88602082850101111561299d57600080fd5b60008060008060808587031215612a5457600080fd5b8435612a5f8161271b565b93506020850135612a6f8161271b565b92506040850135612a7f8161271b565b91506060850135612a8f8161271b565b939692955090935050565b600080600080600060e08688031215612ab257600080fd5b612abb86612704565b945060208601356001600160401b03811115612ad657600080fd5b612ae2888289016128f6565b945050612af287604088016126f3565b9250612b0187608088016126f3565b9497939650919460c0013592915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215612b5057600080fd5b813560048110611e2057600080fd5b604080519081016001600160401b0381118282101715612b8157612b81612b12565b60405290565b600082601f830112612b9857600080fd5b604051604081018181106001600160401b0382111715612bba57612bba612b12565b8060405250806040840185811115612bd157600080fd5b845b81811015612bf257612be481612704565b835260209283019201612bd3565b509195945050505050565b600060808284031215612c0f57600080fd5b604051604081018181106001600160401b0382111715612c3157612c31612b12565b604052601f83018413612c4357600080fd5b612c4b612b5f565b806040850186811115612c5d57600080fd5b855b81811015612c77578035845260209384019301612c5f565b50818452612c858782612b87565b6020850152509195945050505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b0380831681811415612cc857612cc8612c95565b6001019392505050565b634e487b7160e01b600052600160045260246000fd5b604081833760006040838101828152908301915b6002811015612d2b576001600160401b03612d1684612704565b16825260209283019290910190600101612cfc565b5050505050565b6101008101612d418285612ce8565b611e206080830184612ce8565b600060208083528351808285015260005b81811015612d7b57858101830151858201604001528201612d5f565b81811115612d8d576000604083870101525b50601f01601f1916929092016040019392505050565b6020810160048310612db757612db76127f6565b91905290565b6020808252600b908201526a21a420a62fa9a2a72222a960a91b604082015260600190565b6020808252600d908201526c4348414c5f444541444c494e4560981b604082015260600190565b6020808252600e908201526d4348414c5f4e4f545f424c4f434b60901b604082015260600190565b60208082526012908201527121a420a62fa727aa2fa2ac22a1aaaa24a7a760711b604082015260600190565b6000808335601e19843603018112612e7457600080fd5b8301803591506001600160401b03821115612e8e57600080fd5b6020019150600581901b3603821315612ea657600080fd5b9250929050565b6020808252600990820152684249535f535441544560b81b604082015260600190565b600082821015612ee257612ee2612c95565b500390565b6020808252601190820152704241445f4348414c4c454e47455f504f5360781b604082015260600190565b60008219821115612f2557612f25612c95565b500190565b602080825260089082015267544f4f5f4c4f4e4760c01b604082015260600190565b855181526000602087015160018060a01b0380821660208501528060408a0151166040850152505085606083015284608083015260c060a08301528260c0830152828460e0840137600060e0848401015260e0601f19601f85011683010190509695505050505050565b600060208284031215612fc857600080fd5b5051919050565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b8181101561301657845183529383019391830191600101612ffa565b509098975050505050505050565b83815260006020848184015260408301845182860160005b828110156130585781518452928401929084019060010161303c565b509198975050505050505050565b634e487b7160e01b600052601260045260246000fd5b60008261308b5761308b613066565b500490565b60008160001904831182151516156130aa576130aa612c95565b500290565b6000826130be576130be613066565b500690565b7026b0b1b434b732903334b734b9b432b21d60791b8152601181019190915260310190565b60006000198214156130fc576130fc612c95565b5060010190565b652b30b63ab29d60d11b8152600060088410613121576131216127f6565b5060f89290921b600683015260078201526027019056fea26469706673582212203eeda9234f758d61f8ea4dabcb7d8eccb722bcff8c912e1c74b09109197921c564736f6c63430008090033';
const isSuperArgs = (xs) => xs.length > 1;
class ChallengeManager__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = 'ChallengeManager';
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ChallengeManager__factory = ChallengeManager__factory;
ChallengeManager__factory.bytecode = _bytecode;
ChallengeManager__factory.abi = _abi;
