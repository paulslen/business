"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EthCallAware__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: 'MAGIC_GAS',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'MAGIC_ORIGIN',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
];
const _bytecode = '0x60b2610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c80631d791bba146042578063e7c1ce6f14605d575b600080fd5b604a61ca1181565b6040519081526020015b60405180910390f35b606561ca1181565b6040516001600160a01b039091168152602001605456fea2646970667358221220f867645a168cf00ec91cbc0dbf84563c1bbc7ebbcdc2e4b360184e7e13c9c18b64736f6c63430008090033';
const isSuperArgs = (xs) => xs.length > 1;
class EthCallAware__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = 'EthCallAware';
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.EthCallAware__factory = EthCallAware__factory;
EthCallAware__factory.bytecode = _bytecode;
EthCallAware__factory.abi = _abi;
