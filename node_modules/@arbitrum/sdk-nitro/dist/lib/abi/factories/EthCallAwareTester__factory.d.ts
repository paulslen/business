import { Signer, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { EthCallAwareTester, EthCallAwareTesterInterface } from '../EthCallAwareTester';
declare type EthCallAwareTesterConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class EthCallAwareTester__factory extends ContractFactory {
    constructor(...args: EthCallAwareTesterConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<EthCallAwareTester>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): EthCallAwareTester;
    connect(signer: Signer): EthCallAwareTester__factory;
    static readonly contractName: 'EthCallAwareTester';
    readonly contractName: 'EthCallAwareTester';
    static readonly bytecode = "0x608060405234801561001057600080fd5b506101d1806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80637ab2bccd14610030575b600080fd5b61004361003e3660046100d3565b610045565b005b61004d6100bb565b1561007b5760008282604051637aea1f8960e11b815260040161007293929190610178565b60405180910390fd5b7f7486cf206c3c37fba85ac9dea18a40c0a225c31aabc7bc858de7a8f36b98783e8383836040516100ae93929190610178565b60405180910390a1505050565b600061ca113a14806100ce57503261ca11145b905090565b6000806000604084860312156100e857600080fd5b83359250602084013567ffffffffffffffff8082111561010757600080fd5b818601915086601f83011261011b57600080fd5b81358181111561012a57600080fd5b87602082850101111561013c57600080fd5b6020830194508093505050509250925092565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b83815260406020820152600061019260408301848661014f565b9594505050505056fea2646970667358221220d3cc395b1e4e167507777c7b2b4136ec103cdd030df696b33cc0b2da06fd983d64736f6c63430008090033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        anonymous?: undefined;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: never[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): EthCallAwareTesterInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): EthCallAwareTester;
}
export {};
