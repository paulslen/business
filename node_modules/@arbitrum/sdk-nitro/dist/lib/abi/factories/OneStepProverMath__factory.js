"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OneStepProverMath__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "maxInboxMessagesRead",
                        type: "uint256",
                    },
                    {
                        internalType: "contract ISequencerInbox",
                        name: "sequencerInbox",
                        type: "address",
                    },
                    {
                        internalType: "contract IBridge",
                        name: "delayedBridge",
                        type: "address",
                    },
                ],
                internalType: "struct ExecutionContext",
                name: "",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "enum MachineStatus",
                        name: "status",
                        type: "uint8",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value[]",
                                        name: "inner",
                                        type: "tuple[]",
                                    },
                                ],
                                internalType: "struct ValueArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ValueStack",
                        name: "valueStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value[]",
                                        name: "inner",
                                        type: "tuple[]",
                                    },
                                ],
                                internalType: "struct ValueArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ValueStack",
                        name: "internalStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "uint32[]",
                                        name: "inner",
                                        type: "uint32[]",
                                    },
                                ],
                                internalType: "struct PcArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct PcStack",
                        name: "blockStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value",
                                        name: "returnPc",
                                        type: "tuple",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "localsMerkleRoot",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "callerModule",
                                        type: "uint32",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "callerModuleInternals",
                                        type: "uint32",
                                    },
                                ],
                                internalType: "struct StackFrame[]",
                                name: "proved",
                                type: "tuple[]",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct StackFrameWindow",
                        name: "frameStack",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "globalStateHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint32",
                        name: "moduleIdx",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "functionIdx",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "functionPc",
                        type: "uint32",
                    },
                    {
                        internalType: "bytes32",
                        name: "modulesRoot",
                        type: "bytes32",
                    },
                ],
                internalType: "struct Machine",
                name: "startMach",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "globalsMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        components: [
                            {
                                internalType: "uint64",
                                name: "size",
                                type: "uint64",
                            },
                            {
                                internalType: "bytes32",
                                name: "merkleRoot",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ModuleMemory",
                        name: "moduleMemory",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "tablesMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "functionsMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint32",
                        name: "internalsOffset",
                        type: "uint32",
                    },
                ],
                internalType: "struct Module",
                name: "startMod",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint16",
                        name: "opcode",
                        type: "uint16",
                    },
                    {
                        internalType: "uint256",
                        name: "argumentData",
                        type: "uint256",
                    },
                ],
                internalType: "struct Instruction",
                name: "inst",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
            },
        ],
        name: "executeOneStep",
        outputs: [
            {
                components: [
                    {
                        internalType: "enum MachineStatus",
                        name: "status",
                        type: "uint8",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value[]",
                                        name: "inner",
                                        type: "tuple[]",
                                    },
                                ],
                                internalType: "struct ValueArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ValueStack",
                        name: "valueStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value[]",
                                        name: "inner",
                                        type: "tuple[]",
                                    },
                                ],
                                internalType: "struct ValueArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ValueStack",
                        name: "internalStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "uint32[]",
                                        name: "inner",
                                        type: "uint32[]",
                                    },
                                ],
                                internalType: "struct PcArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct PcStack",
                        name: "blockStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value",
                                        name: "returnPc",
                                        type: "tuple",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "localsMerkleRoot",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "callerModule",
                                        type: "uint32",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "callerModuleInternals",
                                        type: "uint32",
                                    },
                                ],
                                internalType: "struct StackFrame[]",
                                name: "proved",
                                type: "tuple[]",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct StackFrameWindow",
                        name: "frameStack",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "globalStateHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint32",
                        name: "moduleIdx",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "functionIdx",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "functionPc",
                        type: "uint32",
                    },
                    {
                        internalType: "bytes32",
                        name: "modulesRoot",
                        type: "bytes32",
                    },
                ],
                internalType: "struct Machine",
                name: "mach",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "globalsMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        components: [
                            {
                                internalType: "uint64",
                                name: "size",
                                type: "uint64",
                            },
                            {
                                internalType: "bytes32",
                                name: "merkleRoot",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ModuleMemory",
                        name: "moduleMemory",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "tablesMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "functionsMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint32",
                        name: "internalsOffset",
                        type: "uint32",
                    },
                ],
                internalType: "struct Module",
                name: "mod",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50612410806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063787569bc14610030575b600080fd5b61004361003e366004611833565b61005a565b604051610051929190611a88565b60405180910390f35b610062611712565b6040805160a08101825260008082528251808401845281815260208082018390528301529181018290526060810182905260808101919091526100a487612001565b91506100b536879003870187612113565b905060006100c660208701876121a9565b90506117e161ffff8216604514806100e2575061ffff82166050145b156100f057506102ff6102e1565b604661ffff831610801590610118575061010c600960466121e3565b61ffff168261ffff1611155b1561012657506104186102e1565b606761ffff83161080159061014e5750610142600260676121e3565b61ffff168261ffff1611155b1561015c57506104fb6102e1565b606a61ffff8316108015906101765750607861ffff831611155b1561018457506105636102e1565b605161ffff8316108015906101ac57506101a0600960516121e3565b61ffff168261ffff1611155b156101ba57506106f46102e1565b607961ffff8316108015906101e257506101d6600260796121e3565b61ffff168261ffff1611155b156101f057506107596102e1565b607c61ffff83161080159061020a5750608a61ffff831611155b1561021857506107ac6102e1565b61ffff821660a7141561022e57506109276102e1565b61ffff821660ac1480610245575061ffff821660ad145b1561025357506109486102e1565b60c061ffff83161080159061026d575060c461ffff831611155b1561027b575061099c6102e1565b60bc61ffff831610801590610295575060bf61ffff831611155b156102a35750610bb16102e1565b60405162461bcd60e51b815260206004820152600e60248201526d494e56414c49445f4f50434f444560901b60448201526064015b60405180910390fd5b6102f284848989898663ffffffff16565b5050965096945050505050565b600061030e8660200151610d3c565b9050604561031f60208601866121a9565b61ffff1614156103605760008151600781111561033e5761033e6118f7565b1461035b5760405162461bcd60e51b81526004016102d890612209565b6103dd565b605061036f60208601866121a9565b61ffff1614156103ab5760018151600781111561038e5761038e6118f7565b1461035b5760405162461bcd60e51b81526004016102d89061222a565b60405162461bcd60e51b81526020600482015260076024820152662120a22fa2a8ad60c91b60448201526064016102d8565b60008160200151600014156103f4575060016103f8565b5060005b61040f61040482610d61565b602089015190610d94565b50505050505050565b600061042f61042a8760200151610d3c565b610da4565b9050600061044361042a8860200151610d3c565b90506000604661045660208801886121a9565b610460919061224b565b905060008061ffff83166002148061047c575061ffff83166004145b8061048b575061ffff83166006145b8061049a575061ffff83166008145b156104ba576104a884610e1b565b91506104b385610e1b565b90506104c8565b505063ffffffff8083169084165b60006104d5838386610e47565b90506104ee6104e382610ff0565b60208d015190610d94565b5050505050505050505050565b600061050d61042a8760200151610d3c565b90506000606761052060208701876121a9565b61052a919061224b565b905060006105408363ffffffff16836020611023565b905061055961054e82610d61565b60208a015190610d94565b5050505050505050565b600061057561042a8760200151610d3c565b9050600061058961042a8860200151610d3c565b9050600080606a61059d60208901896121a9565b6105a7919061224b565b90508061ffff16600314156105e75763ffffffff84166105ca57600091506106d2565b8360030b8360030b816105df576105df61226e565b0591506106d2565b8061ffff16600514156106255763ffffffff841661060857600091506106d2565b8360030b8360030b8161061d5761061d61226e565b0791506106d2565b8061ffff16600a14156106455763ffffffff8316601f85161b91506106d2565b8061ffff16600c14156106655763ffffffff8316601f85161c91506106d2565b8061ffff16600b141561068357600383900b601f85161d91506106d2565b8061ffff16600d14156106a15761069a83856111e7565b91506106d2565b8061ffff16600e14156106b85761069a8385611229565b6106cf8363ffffffff168563ffffffff168361126b565b91505b6106e96106de83610d61565b60208b015190610d94565b505050505050505050565b600061070b6107068760200151610d3c565b6113c6565b9050600061071f6107068860200151610d3c565b90506000605161073260208801886121a9565b61073c919061224b565b9050600061074b838584610e47565b90506106e96106de82610ff0565b600061076b6107068760200151610d3c565b90506000607961077e60208701876121a9565b610788919061224b565b9050600061079883836040611023565b63ffffffff16905061055961054e8261143d565b60006107be6107068760200151610d3c565b905060006107d26107068860200151610d3c565b9050600080607c6107e660208901896121a9565b6107f0919061224b565b90508061ffff1660031415610833576001600160401b038416610816576000915061091b565b8360070b8360070b8161082b5761082b61226e565b05915061091b565b8061ffff1660051415610874576001600160401b038416610857576000915061091b565b8360070b8360070b8161086c5761086c61226e565b07915061091b565b8061ffff16600a1415610897576001600160401b038316603f85161b915061091b565b8061ffff16600c14156108ba576001600160401b038316603f85161c915061091b565b8061ffff16600b14156108d857600783900b603f85161d915061091b565b8061ffff16600d14156108f6576108ef8385611473565b915061091b565b8061ffff16600e141561090d576108ef83856114c1565b61091883858361126b565b91505b6106e96106de8361143d565b60006109396107068760200151610d3c565b90508061040f61040482610d61565b600061095a61042a8760200151610d3c565b9050600060ac61096d60208701876121a9565b61ffff1614156109875761098082610e1b565b9050610990565b5063ffffffff81165b61040f6104048261143d565b60008060c06109ae60208701876121a9565b61ffff1614156109c45750600090506008610a9b565b60c16109d360208701876121a9565b61ffff1614156109e95750600090506010610a9b565b60c26109f860208701876121a9565b61ffff161415610a0e5750600190506008610a9b565b60c3610a1d60208701876121a9565b61ffff161415610a335750600190506010610a9b565b60c4610a4260208701876121a9565b61ffff161415610a585750600190506020610a9b565b60405162461bcd60e51b8152602060048201526018602482015277494e56414c49445f455854454e445f53414d455f5459504560401b60448201526064016102d8565b600080836007811115610ab057610ab06118f7565b1415610ac1575063ffffffff610acb565b506001600160401b035b6000610ada8960200151610d3c565b9050836007811115610aee57610aee6118f7565b81516007811115610b0157610b016118f7565b14610b4a5760405162461bcd60e51b81526020600482015260196024820152784241445f455854454e445f53414d455f545950455f5459504560381b60448201526064016102d8565b6000610b5d600160ff861681901b612284565b602083018051821690529050610b7460018561229b565b60ff166001901b826020015116600014610b9657602082018051821985161790525b60208a0151610ba59083610d94565b50505050505050505050565b60008060bc610bc360208701876121a9565b61ffff161415610bd95750600090506002610c86565b60bd610be860208701876121a9565b61ffff161415610bfe5750600190506003610c86565b60be610c0d60208701876121a9565b61ffff161415610c235750600290506000610c86565b60bf610c3260208701876121a9565b61ffff161415610c485750600390506001610c86565b60405162461bcd60e51b81526020600482015260136024820152721253959053125117d491525395115494149155606a1b60448201526064016102d8565b6000610c958860200151610d3c565b9050816007811115610ca957610ca96118f7565b81516007811115610cbc57610cbc6118f7565b14610d045760405162461bcd60e51b8152602060048201526018602482015277494e56414c49445f5245494e544552505245545f5459504560401b60448201526064016102d8565b80836007811115610d1757610d176118f7565b90816007811115610d2a57610d2a6118f7565b90525060208801516105599082610d94565b60408051808201909152600080825260208201528151610d5b9061150f565b92915050565b604080518082019091526000808252602082015250604080518082019091526000815263ffffffff909116602082015290565b8151610da0908261161f565b5050565b60208101516000908183516007811115610dc057610dc06118f7565b14610ddd5760405162461bcd60e51b81526004016102d890612209565b6401000000008110610d5b5760405162461bcd60e51b81526020600482015260076024820152662120a22fa4999960c91b60448201526064016102d8565b60006380000000821615610e3d575063ffffffff1667ffffffff000000001790565b5063ffffffff1690565b600061ffff8216610e6e57826001600160401b0316846001600160401b0316149050610fe9565b61ffff821660011415610e9857826001600160401b0316846001600160401b031614159050610fe9565b61ffff821660021415610eb5578260070b8460070b129050610fe9565b61ffff821660031415610ede57826001600160401b0316846001600160401b0316109050610fe9565b61ffff821660041415610efb578260070b8460070b139050610fe9565b61ffff821660051415610f2457826001600160401b0316846001600160401b0316119050610fe9565b61ffff821660061415610f42578260070b8460070b13159050610fe9565b61ffff821660071415610f6c57826001600160401b0316846001600160401b031611159050610fe9565b61ffff821660081415610f8a578260070b8460070b12159050610fe9565b61ffff821660091415610fb457826001600160401b0316846001600160401b031610159050610fe9565b60405162461bcd60e51b815260206004820152600a6024820152690424144204952454c4f560b41b60448201526064016102d8565b9392505050565b6040805180820190915260008082526020820152811561101457610d5b6001610d61565b610d5b6000610d61565b919050565b60008161ffff166020148061103c57508161ffff166040145b6110835760405162461bcd60e51b8152602060048201526018602482015277057524f4e4720555345204f462067656e65726963556e4f760441b60448201526064016102d8565b61ffff83166110f45761ffff82165b60008163ffffffff161180156110c757506110ae6001826122be565b63ffffffff166001901b856001600160401b0316166000145b156110de576110d76001826122be565b9050611092565b6110ec8161ffff85166122be565b915050610fe9565b61ffff83166001141561114d5760005b8261ffff168163ffffffff1610801561112f5750600163ffffffff82161b85166001600160401b0316155b156111465761113f6001826122db565b9050611104565b9050610fe9565b61ffff8316600214156111b3576000805b8361ffff168263ffffffff1610156111aa57600163ffffffff83161b86166001600160401b031615611198576111956001826122db565b90505b816111a2816122fa565b92505061115e565b9150610fe99050565b60405162461bcd60e51b815260206004820152600960248201526804241442049556e4f760bc1b60448201526064016102d8565b60006111f460208361231e565b91506112018260206122be565b63ffffffff168363ffffffff16901c8263ffffffff168463ffffffff16901b17905092915050565b600061123660208361231e565b91506112438260206122be565b63ffffffff168363ffffffff16901b8263ffffffff168463ffffffff16901c17905092915050565b600061ffff821661127f5750828201610fe9565b8161ffff16600114156112955750818303610fe9565b8161ffff16600214156112ab5750828202610fe9565b8161ffff16600414156112f7576001600160401b0383166112ce57506000610fe9565b826001600160401b0316846001600160401b0316816112ef576112ef61226e565b049050610fe9565b8161ffff1660061415611343576001600160401b03831661131a57506000610fe9565b826001600160401b0316846001600160401b03168161133b5761133b61226e565b069050610fe9565b8161ffff16600714156113595750828216610fe9565b8161ffff166008141561136f5750828217610fe9565b8161ffff16600914156113855750828218610fe9565b60405162461bcd60e51b81526020600482015260166024820152750494e56414c49445f47454e455249435f42494e5f4f560541b60448201526064016102d8565b60208101516000906001835160078111156113e3576113e36118f7565b146114005760405162461bcd60e51b81526004016102d89061222a565b600160401b8110610d5b5760405162461bcd60e51b815260206004820152600760248201526610905117d24d8d60ca1b60448201526064016102d8565b60408051808201909152600080825260208201525060408051808201909152600181526001600160401b03909116602082015290565b6000611480604083612341565b915061148d82604061235b565b6001600160401b0316836001600160401b0316901c826001600160401b0316846001600160401b0316901b17905092915050565b60006114ce604083612341565b91506114db82604061235b565b6001600160401b0316836001600160401b0316901b826001600160401b0316846001600160401b0316901c17905092915050565b60408051808201909152600080825260208201528151805161153390600190612284565b815181106115435761154361237b565b60200260200101519050600060018360000151516115619190612284565b6001600160401b0381111561157857611578611bc8565b6040519080825280602002602001820160405280156115bd57816020015b60408051808201909152600080825260208201528152602001906001900390816115965790505b50905060005b81518110156116185783518051829081106115e0576115e061237b565b60200260200101518282815181106115fa576115fa61237b565b6020026020010181905250808061161090612391565b9150506115c3565b5090915290565b8151516000906116309060016123ac565b6001600160401b0381111561164757611647611bc8565b60405190808252806020026020018201604052801561168c57816020015b60408051808201909152600080825260208201528152602001906001900390816116655790505b50905060005b8351518110156116e85783518051829081106116b0576116b061237b565b60200260200101518282815181106116ca576116ca61237b565b602002602001018190525080806116e090612391565b915050611692565b508181846000015151815181106117015761170161237b565b602090810291909101015290915250565b604080516101408101909152806000815260200161174760408051606080820183529181019182529081526000602082015290565b815260200161176d60408051606080820183529181019182529081526000602082015290565b815260200161179360408051606080820183529181019182529081526000602082015290565b81526020016117b8604051806040016040528060608152602001600080191681525090565b815260006020820181905260408201819052606082018190526080820181905260a09091015290565b6117e96123c4565b565b60008083601f8401126117fd57600080fd5b5081356001600160401b0381111561181457600080fd5b60208301915083602082850101111561182c57600080fd5b9250929050565b6000806000806000808688036101a081121561184e57600080fd5b606081121561185c57600080fd5b87965060608801356001600160401b038082111561187957600080fd5b818a01915061014080838d03121561189057600080fd5b82985060c0607f19850112156118a557600080fd5b60808b019750604061013f19850112156118be57600080fd5b8a0195506101808a01359250808311156118d757600080fd5b50506118e589828a016117eb565b979a9699509497509295939492505050565b634e487b7160e01b600052602160045260246000fd5b6004811061191d5761191d6118f7565b9052565b805160088110611933576119336118f7565b8252602090810151910152565b805160408084529051602084830181905281516060860181905260009392820191849160808801905b808410156119905761197c828651611921565b938201936001939093019290850190611969565b509581015196019590955250919392505050565b805160408084529051602091840182905280516060850181905260009291820191839160808701905b808410156119f357845163ffffffff1682529382019360019390930192908201906119cd565b5094810151950194909452509092915050565b8051604080845281518482018190526000926060916020918201918388019190865b82811015611a71578451611a3d858251611921565b80830151858901528781015163ffffffff90811688870152908701511660808501529381019360a090930192600101611a28565b509687015197909601969096525093949350505050565b60e08152611a9a60e08201845161190d565b600060208401516101406101008181860152611aba610220860184611940565b9250604087015160df19610120818887030181890152611ada8684611940565b955060608a01519250818887030185890152611af686846119a4565b955060808a015194508188870301610160890152611b148686611a06565b955060a08a015161018089015260c08a01519450611b3b6101a089018663ffffffff169052565b60e08a015163ffffffff81166101c08a015294508984015163ffffffff81166101e08a0152945089015161020088015250929350610fe9925050602084019050848051825260208101516001600160401b0381511660208401526020810151604084015250604081015160608301526060810151608083015263ffffffff60808201511660a08301525050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611c0057611c00611bc8565b60405290565b604051602081016001600160401b0381118282101715611c0057611c00611bc8565b604051608081016001600160401b0381118282101715611c0057611c00611bc8565b60405161014081016001600160401b0381118282101715611c0057611c00611bc8565b60405160a081016001600160401b0381118282101715611c0057611c00611bc8565b604051601f8201601f191681016001600160401b0381118282101715611cb757611cb7611bc8565b604052919050565b80356004811061101e57600080fd5b60006001600160401b03821115611ce757611ce7611bc8565b5060051b60200190565b600060408284031215611d0357600080fd5b611d0b611bde565b9050813560088110611d1c57600080fd5b808252506020820135602082015292915050565b60006040808385031215611d4357600080fd5b611d4b611bde565b915082356001600160401b0380821115611d6457600080fd5b81850191506020808388031215611d7a57600080fd5b611d82611c06565b833583811115611d9157600080fd5b80850194505087601f850112611da657600080fd5b83359250611dbb611db684611cce565b611c8f565b83815260069390931b84018201928281019089851115611dda57600080fd5b948301945b84861015611e0057611df18a87611cf1565b82529486019490830190611ddf565b8252508552948501359484019490945250909392505050565b803563ffffffff8116811461101e57600080fd5b600060408284031215611e3f57600080fd5b611e47611bde565b905081356001600160401b0380821115611e6057600080fd5b81840191506020808387031215611e7657600080fd5b611e7e611c06565b833583811115611e8d57600080fd5b80850194505086601f850112611ea257600080fd5b83359250611eb2611db684611cce565b83815260059390931b84018201928281019088851115611ed157600080fd5b948301945b84861015611ef657611ee786611e19565b82529483019490830190611ed6565b825250845293840135938301939093525092915050565b60006040808385031215611f2057600080fd5b611f28611bde565b915082356001600160401b03811115611f4057600080fd5b8301601f81018513611f5157600080fd5b80356020611f61611db683611cce565b82815260a09283028401820192828201919089851115611f8057600080fd5b948301945b84861015611fe95780868b031215611f9d5760008081fd5b611fa5611c28565b611faf8b88611cf1565b815287870135858201526060611fc6818901611e19565b89830152611fd660808901611e19565b9082015283529485019491830191611f85565b50808752505080860135818601525050505092915050565b6000610140823603121561201457600080fd5b61201c611c4a565b61202583611cbf565b815260208301356001600160401b038082111561204157600080fd5b61204d36838701611d30565b6020840152604085013591508082111561206657600080fd5b61207236838701611d30565b6040840152606085013591508082111561208b57600080fd5b61209736838701611e2d565b606084015260808501359150808211156120b057600080fd5b506120bd36828601611f0d565b60808301525060a083013560a08201526120d960c08401611e19565b60c08201526120ea60e08401611e19565b60e08201526101006120fd818501611e19565b9082015261012092830135928101929092525090565b600081830360c081121561212657600080fd5b61212e611c6d565b833581526040601f198301121561214457600080fd5b61214c611bde565b915060208401356001600160401b038116811461216857600080fd5b8083525060408401356020830152816020820152606084013560408201526080840135606082015261219c60a08501611e19565b6080820152949350505050565b6000602082840312156121bb57600080fd5b813561ffff81168114610fe957600080fd5b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818516808303821115612200576122006121cd565b01949350505050565b6020808252600790820152662727aa2fa4999960c91b604082015260600190565b6020808252600790820152661393d517d24d8d60ca1b604082015260600190565b600061ffff83811690831681811015612266576122666121cd565b039392505050565b634e487b7160e01b600052601260045260246000fd5b600082821015612296576122966121cd565b500390565b600060ff821660ff8416808210156122b5576122b56121cd565b90039392505050565b600063ffffffff83811690831681811015612266576122666121cd565b600063ffffffff808316818516808303821115612200576122006121cd565b600063ffffffff80831681811415612314576123146121cd565b6001019392505050565b600063ffffffff808416806123355761233561226e565b92169190910692915050565b60006001600160401b03808416806123355761233561226e565b60006001600160401b0383811690831681811015612266576122666121cd565b634e487b7160e01b600052603260045260246000fd5b60006000198214156123a5576123a56121cd565b5060010190565b600082198211156123bf576123bf6121cd565b500190565b634e487b7160e01b600052605160045260246000fdfea26469706673582212209de98e2795f9c48dab74cb55e6d157481ba636862b4a974b3db03415fa1ae4b864736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class OneStepProverMath__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "OneStepProverMath";
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.OneStepProverMath__factory = OneStepProverMath__factory;
OneStepProverMath__factory.bytecode = _bytecode;
OneStepProverMath__factory.abi = _abi;
