"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RollupMock__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "sequencerInboxMaxDelayBlocks",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "sequencerInboxMaxDelaySeconds",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_sequencerInboxMaxDelayBlocks",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_sequencerInboxMaxDelaySeconds",
                type: "uint256",
            },
        ],
        name: "setMock",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060ce8061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806314828f9214604157806327ce1def146059578063addd678414607b575b600080fd5b60476081565b60408051918252519081900360200190f35b607960048036036040811015606d57600080fd5b50803590602001356087565b005b60476092565b60005481565b600091909155600155565b6001548156fea2646970667358221220c0af72a94be3f5845409886d45c545eab74fd73dbf89c874a5c9fd3f250f27e164736f6c634300060b0033";
const isSuperArgs = (xs) => xs.length > 1;
class RollupMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "RollupMock";
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.RollupMock__factory = RollupMock__factory;
RollupMock__factory.bytecode = _bytecode;
RollupMock__factory.abi = _abi;
