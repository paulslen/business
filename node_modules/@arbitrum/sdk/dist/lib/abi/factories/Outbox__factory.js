"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Outbox__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "AlreadyInit",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "AlreadySpent",
        type: "error",
    },
    {
        inputs: [],
        name: "BridgeCallFailed",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "actualLength",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "maxProofLength",
                type: "uint256",
            },
        ],
        name: "MerkleProofTooLong",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                internalType: "address",
                name: "rollup",
                type: "address",
            },
        ],
        name: "NotRollup",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "maxIndex",
                type: "uint256",
            },
        ],
        name: "PathNotMinimal",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "proofLength",
                type: "uint256",
            },
        ],
        name: "ProofTooLong",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
            },
        ],
        name: "UnknownRoot",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "l2Sender",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "zero",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "transactionIndex",
                type: "uint256",
            },
        ],
        name: "OutBoxTransactionExecuted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "blockHash",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "outputRoot",
                type: "bytes32",
            },
        ],
        name: "SendRootUpdated",
        type: "event",
    },
    {
        inputs: [],
        name: "OUTBOX_VERSION",
        outputs: [
            {
                internalType: "uint128",
                name: "",
                type: "uint128",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "bridge",
        outputs: [
            {
                internalType: "contract IBridge",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "l2Sender",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "l2Block",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "l1Block",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "l2Timestamp",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "calculateItemHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "proof",
                type: "bytes32[]",
            },
            {
                internalType: "uint256",
                name: "path",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "item",
                type: "bytes32",
            },
        ],
        name: "calculateMerkleRoot",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "proof",
                type: "bytes32[]",
            },
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "l2Sender",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "l2Block",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "l1Block",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "l2Timestamp",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "executeTransaction",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_rollup",
                type: "address",
            },
            {
                internalType: "contract IBridge",
                name: "_bridge",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "l2ToL1BatchNum",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "l2ToL1Block",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "l2ToL1EthBlock",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "l2ToL1OutputId",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "l2ToL1Sender",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "l2ToL1Timestamp",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "rollup",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "roots",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "spent",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "l2BlockHash",
                type: "bytes32",
            },
        ],
        name: "updateSendRoot",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60a06040523060805234801561001457600080fd5b5060805161110a61003060003960006105e9015261110a6000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80639f0c04bf116100875780639f0c04bf1461018f578063a04cee60146101a2578063ae6dead7146101b5578063b0f30537146101d5578063c75184df146101e6578063cb23bcb514610206578063d5b5cc2314610219578063e78cea921461024c57600080fd5b80627436d3146100e457806308635a951461010a578063119852711461011f5780634654779014610126578063485cc9551461013757806372f2a8c71461014a57806380648b02146101525780638515bc6a14610177575b600080fd5b6100f76100f2366004610ab6565b61025f565b6040519081526020015b60405180910390f35b61011d610118366004610bdd565b61029c565b005b60006100f7565b6004546001600160801b03166100f7565b61011d610145366004610cd2565b6105de565b6006546100f7565b6007546001600160a01b03165b6040516001600160a01b039091168152602001610101565b600454600160801b90046001600160801b03166100f7565b6100f761019d366004610d0b565b6106c9565b61011d6101b0366004610d9a565b61070e565b6100f76101c3366004610dbc565b60036020526000908152604090205481565b6005546001600160801b03166100f7565b6101ee600281565b6040516001600160801b039091168152602001610101565b60005461015f906001600160a01b031681565b61023c610227366004610dbc565b60026020526000908152604090205460ff1681565b6040519015158152602001610101565b60015461015f906001600160a01b031681565b600061029484848460405160200161027991815260200190565b6040516020818303038152906040528051906020012061078d565b949350505050565b6000806102af8a8a8a8a8a8a8a8a6106c9565b90506102f18d8d808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508f92508591506108a49050565b915060008a6001600160a01b03168a6001600160a01b03167f20af7f3bbfe38132b8900ae295cd9c8d1914be7052d061a511f3f728dab189648e60405161033a91815260200190565b60405180910390a450600060046040518060a00160405290816000820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b03168152602001600282015481526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152505090506040518060a00160405280896001600160801b03168152602001886001600160801b03168152602001876001600160801b031681526020018381526020018b6001600160a01b0316815250600460008201518160000160006101000a8154816001600160801b0302191690836001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b031602179055506060820151816002015560808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550905050610569898686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109a792505050565b805160208201516001600160801b03918216600160801b91831691909102176004556040820151600580546001600160801b03191691909216179055606081015160065560800151600780546001600160a01b0319166001600160a01b03909216919091179055505050505050505050505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156106715760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b6000546001600160a01b03161561069b57604051633bcd329760e21b815260040160405180910390fd5b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055565b600088888888888888886040516020016106ea989796959493929190610dd5565b60405160208183030381529060405280519060200120905098975050505050505050565b6000546001600160a01b0316331461074e57600054604051630e4cf1bf60e21b81523360048201526001600160a01b039091166024820152604401610668565b60008281526003602052604080822083905551829184917fb4df3847300f076a369cd76d2314b470a1194d9e8a6bb97f1860aee88a5f67489190a35050565b82516000906101008111156107c057604051637ed6198f60e11b8152600481018290526101006024820152604401610668565b8260005b8281101561089a576107d7600287610e44565b61082d57818782815181106107ee576107ee610e58565b6020026020010151604051602001610810929190918252602082015260400190565b60405160208183030381529060405280519060200120915061087b565b86818151811061083f5761083f610e58565b602002602001015182604051602001610862929190918252602082015260400190565b6040516020818303038152906040528051906020012091505b610886600287610e84565b95508061089281610e98565b9150506107c4565b5095945050505050565b60006101008451106108ce57835160405163ab6a068360e01b815260040161066891815260200190565b83516108db906002610f99565b83106109125782845160026108f09190610f99565b604051630b8a724b60e01b815260048101929092526024820152604401610668565b600061091f85858561025f565b600081815260036020526040902054909150610951576040516310e61af960e31b815260048101829052602401610668565b60008481526002602052604090205460ff161561098457604051639715b8d360e01b815260048101859052602401610668565b50506000828152600260205260409020805460ff19166001179055819392505050565b600154604051639e5d4c4960e01b815260009182916001600160a01b0390911690639e5d4c49906109e090889088908890600401610fdc565b600060405180830381600087803b1580156109fa57600080fd5b505af1158015610a0e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a369190810190611025565b9150915081610a6857805115610a4f5780518082602001fd5b604051631bb7daad60e11b815260040160405180910390fd5b5050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610aae57610aae610a6f565b604052919050565b600080600060608486031215610acb57600080fd5b833567ffffffffffffffff80821115610ae357600080fd5b818601915086601f830112610af757600080fd5b8135602082821115610b0b57610b0b610a6f565b8160051b9250610b1c818401610a85565b828152928401810192818101908a851115610b3657600080fd5b948201945b84861015610b5457853582529482019490820190610b3b565b9a918901359950506040909701359695505050505050565b6001600160a01b0381168114610b8157600080fd5b50565b8035610b8f81610b6c565b919050565b60008083601f840112610ba657600080fd5b50813567ffffffffffffffff811115610bbe57600080fd5b602083019150836020828501011115610bd657600080fd5b9250929050565b60008060008060008060008060008060006101208c8e031215610bff57600080fd5b8b3567ffffffffffffffff80821115610c1757600080fd5b818e0191508e601f830112610c2b57600080fd5b813581811115610c3a57600080fd5b8f60208260051b8501011115610c4f57600080fd5b60208381019e50909c508e01359a50610c6a60408f01610b84565b9950610c7860608f01610b84565b985060808e0135975060a08e0135965060c08e0135955060e08e013594506101008e0135915080821115610cab57600080fd5b50610cb88e828f01610b94565b915080935050809150509295989b509295989b9093969950565b60008060408385031215610ce557600080fd5b8235610cf081610b6c565b91506020830135610d0081610b6c565b809150509250929050565b60008060008060008060008060e0898b031215610d2757600080fd5b8835610d3281610b6c565b97506020890135610d4281610b6c565b965060408901359550606089013594506080890135935060a0890135925060c089013567ffffffffffffffff811115610d7a57600080fd5b610d868b828c01610b94565b999c989b5096995094979396929594505050565b60008060408385031215610dad57600080fd5b50508035926020909101359150565b600060208284031215610dce57600080fd5b5035919050565b60006bffffffffffffffffffffffff19808b60601b168352808a60601b16601484015250876028830152866048830152856068830152846088830152828460a8840137506000910160a801908152979650505050505050565b634e487b7160e01b600052601260045260246000fd5b600082610e5357610e53610e2e565b500690565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082610e9357610e93610e2e565b500490565b6000600019821415610eac57610eac610e6e565b5060010190565b600181815b80851115610eee578160001904821115610ed457610ed4610e6e565b80851615610ee157918102915b93841c9390800290610eb8565b509250929050565b600082610f0557506001610f93565b81610f1257506000610f93565b8160018114610f285760028114610f3257610f4e565b6001915050610f93565b60ff841115610f4357610f43610e6e565b50506001821b610f93565b5060208310610133831016604e8410600b8410161715610f71575081810a610f93565b610f7b8383610eb3565b8060001904821115610f8f57610f8f610e6e565b0290505b92915050565b6000610fa58383610ef6565b9392505050565b60005b83811015610fc7578181015183820152602001610faf565b83811115610fd6576000848401525b50505050565b60018060a01b0384168152826020820152606060408201526000825180606084015261100f816080850160208701610fac565b601f01601f191691909101608001949350505050565b6000806040838503121561103857600080fd5b8251801515811461104857600080fd5b602084015190925067ffffffffffffffff8082111561106657600080fd5b818501915085601f83011261107a57600080fd5b81518181111561108c5761108c610a6f565b61109f601f8201601f1916602001610a85565b91508082528660208285010111156110b657600080fd5b6110c7816020840160208601610fac565b508092505050925092905056fea264697066735822122011c08dfff4335b06cbccc22f42fbc2f6c285cdf001032e56350d1cb0f2583f1464736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class Outbox__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "Outbox";
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Outbox__factory = Outbox__factory;
Outbox__factory.bytecode = _bytecode;
Outbox__factory.abi = _abi;
