"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodeInterface__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint64",
                name: "size",
                type: "uint64",
            },
            {
                internalType: "uint64",
                name: "leaf",
                type: "uint64",
            },
        ],
        name: "constructOutboxProof",
        outputs: [
            {
                internalType: "bytes32",
                name: "send",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
            },
            {
                internalType: "bytes32[]",
                name: "proof",
                type: "bytes32[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "deposit",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "l2CallValue",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "excessFeeRefundAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "callValueRefundAddress",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "estimateRetryableTicket",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "blockNum",
                type: "uint64",
            },
        ],
        name: "findBatchContainingBlock",
        outputs: [
            {
                internalType: "uint64",
                name: "batch",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "blockHash",
                type: "bytes32",
            },
        ],
        name: "getL1Confirmations",
        outputs: [
            {
                internalType: "uint64",
                name: "confirmations",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class NodeInterface__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.NodeInterface__factory = NodeInterface__factory;
NodeInterface__factory.abi = _abi;
